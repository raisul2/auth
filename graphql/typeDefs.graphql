type Post {
  id: ID!
  body: String
  username: String
  createdAt: String
  comments: [Comment]!
  likes: [Like]!
  likeCount: Int!
  commentCount: Int!
} 

type Comment {
  id: ID!
  body: String!
  username: String!
  createdAt: String!
}

type Like {
  id: ID!
  username: String!
  createdAt: String!
}

type User {
  id: ID!
  email: String
  token: String
  username: String
  createdAt: String
}

input RegisterInput {
  username: String
  email: String!
  password: String!
  confirmPassword: String!
}

input LoginInput {
  email: String!
  password: String!
}

type Query {
  getPosts: [Post]
  getPost(postId: ID!): Post
  getUser(userId: ID!): User
}

type Mutation {
  registerUser(registerINput: RegisterInput): User!
  loginUser(loginInput: LoginInput!): User!
  createPost(body: String!): Post!
  deletePost(postId: ID!): String!
  createComment(postId: ID!, body: String!): Post!
  deleteComment(postId: ID!, commentId: String!): Post!
  likePost(postId: ID!): Post!
}

type Subscription {
  newPost: Post!
}
